import{L as C,d as S}from"./deep-equal-D6CKYaOP.js";const _={blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"zero",blendAlphaOperation:"add",blendAlphaSrcFactor:"constant-alpha",blendAlphaDstFactor:"zero"};class A extends C{constructor(){super(...arguments),this._colorEncoderState=null}render(e){return"pickingFBO"in e?this._drawPickingBuffer(e):super.render(e)}_drawPickingBuffer({layers:e,layerFilter:r,views:t,viewports:s,onViewportActive:o,pickingFBO:n,deviceRect:{x:l,y:d,width:p,height:u},cullRect:h,effects:b,pass:f="picking",pickZ:i,shaderModuleProps:g}){this.pickZ=i;const a=this._resetColorEncoder(i),k=[l,d,p,u],y=super.render({target:n,layers:e,layerFilter:r,views:t,viewports:s,onViewportActive:o,cullRect:h,effects:b?.filter(P=>P.useInPicking),pass:f,isPicking:!0,shaderModuleProps:g,clearColor:[0,0,0,0],colorMask:15,scissorRect:k});return this._colorEncoderState=null,{decodePickingColor:a&&E.bind(null,a),stats:y}}shouldDrawLayer(e){const{pickable:r,operation:t}=e.props;return r&&t.includes("draw")||t.includes("terrain")||t.includes("mask")}getShaderModuleProps(e,r,t){return{picking:{isActive:1,isAttribute:this.pickZ},lighting:{enabled:!1}}}getLayerParameters(e,r,t){const s={...e.props.parameters},{pickable:o,operation:n}=e.props;return!this._colorEncoderState||n.includes("terrain")?s.blend=!1:o&&n.includes("draw")&&(Object.assign(s,_),s.blend=!0,s.blendColor=w(this._colorEncoderState,e,t)),s}_resetColorEncoder(e){return this._colorEncoderState=e?null:{byLayer:new Map,byAlpha:[]},this._colorEncoderState}}function w(c,e,r){const{byLayer:t,byAlpha:s}=c;let o,n=t.get(e);return n?(n.viewports.push(r),o=n.a):(o=t.size+1,o<=255?(n={a:o,layer:e,viewports:[r]},t.set(e,n),s[o]=n):(S.warn("Too many pickable layers, only picking the first 255")(),o=0)),[0,0,0,o/255]}function E(c,e){const r=c.byAlpha[e[3]];return r&&{pickedLayer:r.layer,pickedViewports:r.viewports,pickedObjectIndex:r.layer.decodePickingColor(e)}}export{A as P};
